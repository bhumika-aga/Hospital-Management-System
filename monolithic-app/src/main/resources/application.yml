# Default Configuration
spring:
  application:
    name: hospital-management-system
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

# Application Information
info:
  app:
    name: Hospital Management System
    description: Comprehensive hospital management system with patient care, treatment planning, and insurance claims
    version: 2.0.0
    encoding: UTF-8
  java:
    version: 17

---
# Development Configuration
spring:
  config:
    activate:
      on-profile: local
  
  # Database Configuration - H2 for development
  datasource:
    url: jdbc:h2:mem:hospital_db
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  
  # H2 Console Configuration
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    open-in-view: false

# Server Configuration
server:
  port: 8080

# Logging Configuration
logging:
  level:
    com.hospital: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:hospitalManagementDevSecretKey2024}
  expiration: 86400000

# CORS Configuration
cors:
  allowed-origins: http://localhost:3000,http://localhost:3001,http://localhost:5173
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# API Documentation Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops
  endpoint:
    health:
      show-details: always

---
# Production Configuration
spring:
  config:
    activate:
      on-profile: prod
  
  # Database Configuration - MySQL for production
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:hospital_db}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:password}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 600000
  
  # H2 Console Configuration - disabled in production
  h2:
    console:
      enabled: false
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:create-drop}
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    open-in-view: false

# Server Configuration - optimized for Render.com
server:
  port: ${PORT:8080}
  tomcat:
    threads:
      max: 50
      min-spare: 5
    connection-timeout: 30000
    keep-alive-timeout: 30000
    max-connections: 200
  error:
    include-stacktrace: never
    include-message: always

# Logging Configuration - production optimized
logging:
  level:
    root: INFO
    com.hospital: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    sql: ERROR

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:hospitalManagementProdSecretKey2024}
  expiration: ${JWT_EXPIRATION:86400000}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://mediflow-portal.onrender.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# API Documentation Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Management Endpoints - limited in production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Security optimizations
spring.security.user.password: disabled