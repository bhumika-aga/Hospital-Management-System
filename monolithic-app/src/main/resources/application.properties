# Hospital Management System - Monolithic Application Configuration
server.port=8080
spring.application.name=hospital-management-system

# Database Configuration
spring.datasource.url=jdbc:h2:mem:hospital_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Logging Configuration (Optimized for Production)
logging.level.root=INFO
logging.level.com.hospital=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.sql=ERROR

# JWT Configuration
jwt.secret=hospitalManagementSecretKey2024ForMonolithicApplication
jwt.expiration=86400000

# API Documentation Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:3001
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Application Information
info.app.name=Hospital Management System
info.app.description=Comprehensive hospital management system with patient care, treatment planning, and insurance claims
info.app.version=2.0.0
info.app.encoding=UTF-8
info.java.version=17

# Render.com Free Tier Optimizations
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.connection-timeout=30000
server.tomcat.keep-alive-timeout=30000
server.tomcat.max-connections=200

# Connection Pool Optimization
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# Security optimizations
spring.security.user.password=disabled
server.error.include-stacktrace=never
server.error.include-message=always